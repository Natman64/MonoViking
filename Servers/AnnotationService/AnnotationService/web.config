<?xml version="1.0" encoding="utf-8"?>
<configuration>

	<!--
  <system.diagnostics>
    <sources>
      <source name="System.ServiceModel" switchValue="Information,ActivityTracing"
          propagateActivity="true">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type="" />
          </add>
          <add name="NewListener">
            <filter type="" />
          </add>
        </listeners>
      </source>
      <source name="System.ServiceModel.MessageLogging" switchValue="Information,ActivityTracing">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type="" />
          </add>
          <add name="NewListener">
            <filter type="" />
          </add>
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add initializeData="E:\Logs\WCFAnnotationText.svclog" type="System.Diagnostics.XmlWriterTraceListener, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
          name="NewListener" traceOutputOptions="LogicalOperationStack, DateTime, Timestamp, ProcessId, ThreadId, Callstack">
        <filter type="" />
      </add>
    </sharedListeners>
  </system.diagnostics>
	!--> 
  <connectionStrings>
	<add name="VikingGenericConnection" connectionString="Data Source=MARCLABRETINADA\SQLEXPRESS;Initial Catalog={0};Integrated Security=True"/>
  </connectionStrings>

  <system.serviceModel>
	<serviceHostingEnvironment aspNetCompatibilityEnabled ="True"/>
    <diagnostics>
      <messageLogging logEntireMessage="true" logMalformedMessages="true"
        logMessagesAtServiceLevel="true" logMessagesAtTransportLevel="true" />
    </diagnostics>
    <bindings>
      <wsHttpBinding>
        <binding name="wsHTTP" openTimeout="00:03:00" receiveTimeout="00:03:00"
          sendTimeout="00:10:00" maxBufferPoolSize="67108864" maxReceivedMessageSize ="67108864">
          <readerQuotas maxArrayLength="5000000" />
          <security mode ="TransportWithMessageCredential">
			<transport clientCredentialType="None"/>
            <message clientCredentialType="UserName"
					 establishSecurityContext="true"  />
          </security>
		  
        </binding>
      </wsHttpBinding>
    </bindings>
    <services>
      <service behaviorConfiguration="AnnotationBehaviour" name="Annotation.AnnotateService">
        <endpoint address="" binding="wsHttpBinding"
	      bindingConfiguration="wsHTTP"
          name="Annotation.Service.Interfaces.IAnnotateStructureTypes"
          contract="Annotation.Service.Interfaces.IAnnotateStructureTypes" />
        <endpoint address="" binding="wsHttpBinding"
		  bindingConfiguration="wsHTTP"
          name="Annotation.Service.Interfaces.IAnnotateStructures"
	      contract="Annotation.Service.Interfaces.IAnnotateStructures" />
        <endpoint address="" binding="wsHttpBinding"
		  bindingConfiguration="wsHTTP"
          name="Annotation.Service.Interfaces.IAnnotateLocations"
		  contract="Annotation.Service.Interfaces.IAnnotateLocations" />
        <endpoint address="" binding="wsHttpBinding"
		  bindingConfiguration="wsHTTP"
          name="Annotation.Service.Interfaces.ICircuit"
		  contract="Annotation.Service.Interfaces.ICircuit" />
        <endpoint address="mex"
				  binding="mexHttpsBinding"
				  contract="IMetadataExchange" />
        <host>
          <baseAddresses>
			  <add baseAddress = "https://connectomes.utah.edu/Services"/>
			  <add baseAddress = "https://155.100.105.9/Services"/>
			  <!-- <add baseAddress = "http://connectomes.utah.edu/Services"/>-->
          </baseAddresses>
        </host>
      </service>
    </services>
    <behaviors>
      <serviceBehaviors>
		  <behavior name="AnnotationBehaviour">
			  <serviceMetadata httpsGetEnabled="true" httpsGetUrl ="" />
			  <serviceDebug includeExceptionDetailInFaults="true" />
			  <dataContractSerializer maxItemsInObjectGraph="2147483647" />

			  <serviceCredentials>

				  <userNameAuthentication userNamePasswordValidationMode ="MembershipProvider"
										  membershipProviderName ="VikingMembershipProvider" />

				  <serviceCertificate findValue ="0103"
									  storeLocation ="LocalMachine"
									  x509FindType="FindBySerialNumber"/>
			  </serviceCredentials>

			  <serviceAuthorization principalPermissionMode ="UseAspNetRoles" roleProviderName ="VikingRoleProvider">
			  </serviceAuthorization>

			  <serviceSecurityAudit auditLogLocation ="Default"
									serviceAuthorizationAuditLevel ="SuccessOrFailure"
									messageAuthenticationAuditLevel ="SuccessOrFailure"/>
		  </behavior>
		  
	  </serviceBehaviors>
    </behaviors>
  </system.serviceModel>

  <system.webServer>
    <directoryBrowse enabled="false" />
  </system.webServer>

  <system.web>
    <customErrors mode="Off"/>
	  <authentication mode="Forms" >
		  <forms cookieless="UseCookies" slidingExpiration ="true" requireSSL ="true"/>
	  </authentication >
	<membership defaultProvider ="VikingMembershipProvider"/>  
	<profile enabled ="true" defaultProvider ="VikingProfileProvider"/>
    <roleManager enabled="true" defaultProvider ="VikingRoleProvider"/>
  </system.web>

</configuration>