#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by LINQ to SQL template for T4 C#
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Data.Linq.Mapping;


namespace Annotation.Database
{	
	[Table(Name=@"dbo.DeletedLocations")]
	public partial class DBDeletedLocations : INotifyPropertyChanging, INotifyPropertyChanged
	{
		#region Property Change Event Handling
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		public event PropertyChangingEventHandler PropertyChanging;
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if (PropertyChanging != null) {
				PropertyChanging(this, emptyChangingEventArgs);
			}
		}
			
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if (PropertyChanged != null) {
				PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		#endregion
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(ChangeAction action);
		partial void OnCreated();
		#endregion

		#region Construction
		public DBDeletedLocations()
		{
			OnCreated();
		}
		#endregion

		#region Column Mappings
		partial void OnIDChanging(long value);
		partial void OnIDChanged();
		private long _ID;
		[Column(Storage=@"_ID", DbType=@"BigInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public long ID
		{
			get { return _ID; }
			set {
				if (_ID != value) {
					OnIDChanging(value);
					SendPropertyChanging();
					_ID = value;
					SendPropertyChanged("ID");
					OnIDChanged();
				}
			}
		}
		
		partial void OnDeletedOnChanging(DateTime value);
		partial void OnDeletedOnChanged();
		private DateTime _DeletedOn;
		[Column(Storage=@"_DeletedOn", DbType=@"DateTime NOT NULL", CanBeNull=false)]
		public DateTime DeletedOn
		{
			get { return _DeletedOn; }
			set {
				if (_DeletedOn != value) {
					OnDeletedOnChanging(value);
					SendPropertyChanging();
					_DeletedOn = value;
					SendPropertyChanged("DeletedOn");
					OnDeletedOnChanged();
				}
			}
		}
		
		#endregion
	}
}
#pragma warning restore 1591